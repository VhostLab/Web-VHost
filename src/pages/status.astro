---
import { getServersStatus } from '../lib/serverStatus';
const servers = await getServersStatus();
---
<!DOCTYPE html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <title>Status de Servidores</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      body { font-family: sans-serif; background: #f5f5f5; padding: 2rem; }
      h1 { text-align: center; margin-bottom: 2rem; }
      .server {
        background: white;
        border-radius: 10px;
        padding: 1.5rem;
        margin-bottom: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
      }
      .status {
        font-weight: bold;
        display: flex;
        align-items: center;
      }
      .status span {
        margin-left: 0.5rem;
      }
      .online { color: green; }
      .offline { color: red; }
    </style>
  </head>
  <body>
    <h1>🌐 Status de los Servidores</h1>
    <div id="servers">
      {servers.map((server) => (
        <div class="server">
          <div>
            <strong>{server.name}</strong> ({server.address})<br />
            <small>Ping: {server.responseTime !== null ? `${server.responseTime} ms` : '—'}</small>
          </div>
          <div class={`status ${server.isOnline ? 'online' : 'offline'}`}>
            {server.isOnline ? '🟢' : '🔴'}
            <span>{server.isOnline ? 'Online' : 'Offline'}</span>
          </div>
        </div>
      ))}
    </div>

    <script type="module">
      async function refreshServers() {
        const res = await fetch('/api/status');
        const data = await res.json();
        const serversContainer = document.getElementById('servers');
        serversContainer.innerHTML = '';

        data.forEach((server) => {
          const serverDiv = document.createElement('div');
          serverDiv.className = 'server';

          const infoDiv = document.createElement('div');
          infoDiv.innerHTML = `<strong>${server.name}</strong> (${server.address})<br /><small>Ping: ${server.responseTime !== null ? server.responseTime + ' ms' : '—'}</small>`;

          const statusDiv = document.createElement('div');
          statusDiv.className = `status ${server.isOnline ? 'online' : 'offline'}`;
          statusDiv.innerHTML = `${server.isOnline ? '🟢' : '🔴'} <span>${server.isOnline ? 'Online' : 'Offline'}</span>`;

          serverDiv.appendChild(infoDiv);
          serverDiv.appendChild(statusDiv);

          serversContainer.appendChild(serverDiv);
        });
      }

      setInterval(refreshServers, 30000);
    </script>
  </body>
</html>
